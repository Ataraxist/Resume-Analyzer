rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) && 
        // Prevent users from modifying their role directly
        (!request.resource.data.diff(resource.data).affectedKeys().hasAny(['role']));
    }
    
    // Resumes collection
    match /resumes/{resumeId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid);
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Analyses collection
    match /analyses/{analysisId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if false; // Analyses should not be updated
      allow delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Analysis status collection (for real-time streaming updates)
    match /analysisStatus/{analysisId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow write: if false; // Only writable by functions
    }
    
    // Parse status collection (for real-time resume parsing updates)
    match /parseStatus/{parseId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow write: if false; // Only writable by functions
    }
    
    // Occupations collection (read-only for all authenticated users)
    match /occupations/{occupationCode} {
      allow read: if true; // Public data
      allow write: if false; // Only writable by admin/functions
      
      // Subcollections for occupation details
      match /{subcollection}/{documentId} {
        allow read: if true;
        allow write: if false;
      }
    }
    
    // System metadata (read-only)
    match /system/{document} {
      allow read: if true;
      allow write: if false;
    }
    
    // Processing errors (write-only by functions, no read)
    match /processing_errors/{errorId} {
      allow read: if false;
      allow write: if false;
    }
    
    // Job zones collection (public read-only data)
    match /job_zones/{zoneId} {
      allow read: if true;  // Public data
      allow write: if false; // Only writable by admin/functions
    }
    
    // Cache collection (for functions to cache API responses)
    match /cache/{cacheId} {
      allow read: if true;  // Allow reading cached data
      allow write: if false; // Only writable by functions
    }
    
    // Fetch metadata (for tracking sync status)
    match /fetch_metadata/{metadataId} {
      allow read: if true;
      allow write: if false; // Only writable by functions
    }
  }
}